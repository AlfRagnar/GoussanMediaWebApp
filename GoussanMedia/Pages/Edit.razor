@page "/Edit/{id}"

@using Microsoft.Azure.Cosmos;
@inject ICosmosDbService _cosmosDb
@inject NavigationManager  navigation

@if (list == null)
{
    <MudSkeleton />
    <MudSkeleton Animation="Animation.False" />
    <MudSkeleton Animation="Animation.Wave" />
}
else
{
<MudGrid>
    <MudItem xs="12" sm="6" md="4">
        <MudTextField @bind-Value="list.Name" Label="Title" Variant="Variant.Text"></MudTextField>
    </MudItem>
    <MudItem xs="12" sm="12" md="12">
        <MudTextField T="string" Label="Multiline" Variant="Variant.Outlined" Text="@list.Description" Lines="5" />
    </MudItem>
    <MudItem xs="6">
        <MudSelect Label="Complete" Margin="Margin.Dense" @bind-Value="list.Completed" Class="mt-4">
            <MudSelectItem Value="true">Yes</MudSelectItem>
            <MudSelectItem Value="false">No</MudSelectItem>
        </MudSelect>
    </MudItem>
    <MudItem xs="12">
        <MudButton Variant="Variant.Filled" Color="Color.Primary" @onclick="@(() => EditList(list))">
            Save
        </MudButton>
    </MudItem>
    <MudItem xs="12">
        <MudButton Variant="Variant.Filled" Color="Color.Secondary" @onclick="@(() => navigation.NavigateTo("/list"))">
            Return
        </MudButton>
    </MudItem>
    <MudItem xs="6">
        <MudText>Created at: @list.Created</MudText>
    </MudItem>
    <MudItem xs="6">
        <MudText>Last time Changed: @list.Changed</MudText>
    </MudItem>
</MudGrid>
}

@code {
    [Parameter]
    public string id { get; set; }
    private readonly string containerName = "ToDoList";
    private ToDoList list;
    private Container _container;

    protected override async Task OnInitializedAsync()
    {
        _container = _cosmosDb.GetContainer(containerName);
        list = await GetList(id, _container);
    }

    protected async Task<ToDoList> GetList(string id, Container container)
    {
        return list = await _cosmosDb.GetItemAsync(id, container);
    }

    protected async void EditList(ToDoList list)
    {
        //Container _container = _cosmosDb.GetContainer(containerName);
        list.Changed = DateTime.Now;
        await _cosmosDb.UpdateItem(list, _container);
        navigation.NavigateTo("/list");
    }
}